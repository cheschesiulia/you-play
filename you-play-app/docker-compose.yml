version: "3.8"

services:
  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8000:8000"
    depends_on:
      - auth-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
    networks:
      - auth-net

  auth-db:
    image: postgres:14
    container_name: auth-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - auth-net
    ports:
      - "5433:5432"

  adminer:
    image: adminer
    container_name: auth-adminer
    ports:
      - "8080:8080"
    networks:
      - auth-net

  streaming-service:
    build: ./streaming-service
    container_name: streaming-service
    ports:
      - "8001:8000"
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET=${MINIO_BUCKET}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
    networks:
      - streaming-net
      - auth-net

volumes:
  auth-db-data:

networks:
  auth-net:
  streaming-net:
